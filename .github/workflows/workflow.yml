# name: workflow

# on:
#   push:
#     branches:
#       - staging
#       - main

# jobs:
#   check:
#     if: github.ref == 'refs/heads/staging'
#     runs-on: ubuntu-latest
#     container:
#       image: node:22
#     steps:
#       # Setup Node.js
#       - uses: actions/checkout@v3

#       - uses: actions/setup-node@v3
#         with:
#           node-version: "22"

#       # Install dependencies
#       - run: npm ci

#       # Run ESLint
#       - run: npm run lint

#       # Run tests
#       - run: npm test

#   build-and-deploy:
#     if: github.ref == 'refs/heads/main'
#     runs-on: ubuntu-latest
#     env:
#       SERVICE_NAME: <Your-service-or-api-name>
#       GCP_PROJECT_ID: <Your-google-cloud-project-id>
#       REGION: <Your-chosen-region>
#       ARTIFACT_REGISTRY_REPO: <The-name-of-your-artifact-registry-repo>
#     steps:
#       - uses: actions/checkout@v3

#       # Setup Node.js
#       - uses: actions/setup-node@v3
#         with:
#           node-version: "22"

#       # Install dependencies (needed for build)
#       - run: npm ci

#       # Run ESLint
#       - run: npm run lint

#       # Run tests
#       - run: npm test

#       - uses: google-github-actions/auth@v1
#         with:
#           credentials_json: ${{ secrets.GCP_KEY }}

#       # Setup gcloud CLI (optional if you want latest version)
#       - uses: google-github-actions/setup-gcloud@v2
#         with:
#           project_id: ${{ env.GCP_PROJECT_ID }}
#           version: latest

#       - run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

#       # Build Docker image
#       - run: docker build -t ${{env.REGION}}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{env.ARTIFACT_REGISTRY_REPO}}/${{ env.SERVICE_NAME }}:latest .

#       # Push Docker image
#       - run: docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO}}/${{ env.SERVICE_NAME }}:latest

#       # Deploy to Cloud Run
#       - run: |
#           gcloud run deploy ${{ env.SERVICE_NAME }} \
#             --image ${{ env.REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO}}/${{ env.SERVICE_NAME }}:latest \
#             --region ${{ env.REGION }} \
#             --platform managed \
#             --allow-unauthenticated
